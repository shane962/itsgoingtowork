xport default async function handler(req, res) {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  try {
    const sessionToken = process.env.SESSION_TOKEN || "uL6q0PVe7/EAJPxV8ip/1O45Hz7JRv8nU3E9AYQ4K6M=";
    const appKey = process.env.BETFAIR_APP_KEY || 'nzIFcwyWhrlwYMrh';
    
    const headers = {
      'accept': 'application/json',
      'cookie': 'ssoid=' + sessionToken,
      'origin': 'https://www.betfair.com.au',
      'x-application': appKey
    };

    const url = 'https://apieds.betfair.com.au/api/eds/meeting-races/v4?ak=' + appKey + '&countriesGroup=[[2]]&eventTypeGroup=[[1,4161]]&meetingStatus=ACTIVE&format=json';
    
    const response = await fetch(url, { headers });
    const data = await response.json();
    
    if (data && data.result && data.result.length > 0) {
      const races = [];
      
      for (let i = 0; i < data.result.length && i < 5; i++) {
        const meeting = data.result[i];
        const meetingRaces = meeting.races || [];
        
        for (let j = 0; j < meetingRaces.length && j < 3; j++) {
          const race = meetingRaces[j];
          races.push({
            id: race.id || 'race_' + i + '_' + j,
            name: race.raceName || 'Race ' + (j + 1),
            track: {
              name: meeting.meetingName || 'Track ' + (i + 1),
              location: meeting.venueName || 'Unknown'
            },
            runners: (race.runners || []).slice(0, 6).map(function(runner, k) {
              return {
                number: runner.runnerNumber || k + 1,
                name: runner.runnerName || 'Runner ' + (k + 1),
                odds: runner.lastPriceTraded || 5.0
              };
            })
          });
        }
      }
      
      res.status(200).json(races);
    } else {
      res.status(200).json([]);
    }
    
  } catch (error) {
    res.status(500).json({ error: 'API Error' });
  }
